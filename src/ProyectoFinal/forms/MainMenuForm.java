package ProyectoFinal.forms;

import javax.swing.JOptionPane;
import ProyectoFinal.User;

/**
 *
 * @author User
 */
public class MainMenuForm extends javax.swing.JFrame {
    private User currentUser = null;
    /**
     * Creates new form MenuPrincipalForm
     */
    public MainMenuForm() {
        initComponents(null);
    }
    
    public MainMenuForm(User user){
        initComponents(user);
        this.currentUser = user;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(User user) {

        UserManagementButton = new javax.swing.JButton();
        StaffManagementButton = new javax.swing.JButton();
        StaffRecruitmentButton = new javax.swing.JButton();
        StaffControlActionButton = new javax.swing.JButton();
        ReportsPanel = new javax.swing.JPanel();
        RecentHiringButton = new javax.swing.JButton();
        StaffMovementsButton = new javax.swing.JButton();
        AbscenceVacationsButton = new javax.swing.JButton();
        EmployeeByDepartmentButton = new javax.swing.JButton();
        MainMenuLabel = new javax.swing.JLabel();
        ReportsLabel = new javax.swing.JLabel();
        ExitButton = new javax.swing.JButton();
        StaffMovementControlButton = new javax.swing.JButton();
        StaffActionsLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(730, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        UserManagementButton.setText("Gestión de Usuarios");
        UserManagementButton.setPreferredSize(new java.awt.Dimension(250, 50));
        UserManagementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserManagementButtonActionPerformed(evt);
            }
        });

        StaffManagementButton.setText("Gestión de personal");
        StaffManagementButton.setPreferredSize(new java.awt.Dimension(250, 50));
        StaffManagementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffManagementButtonActionPerformed(evt);
            }
        });

        StaffRecruitmentButton.setText("Contratación de personal");
        StaffRecruitmentButton.setPreferredSize(new java.awt.Dimension(250, 50));
        StaffRecruitmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffRecruitmentButtonActionPerformed(evt);
            }
        });

        StaffControlActionButton.setText("Control de Acciones del Personal");
        StaffControlActionButton.setPreferredSize(new java.awt.Dimension(250, 50));
        StaffControlActionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffControlActionButtonActionPerformed(evt);
            }
        });

        RecentHiringButton.setText("Contrataciones recientes");
        RecentHiringButton.setPreferredSize(new java.awt.Dimension(250, 50));
        RecentHiringButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecentHiringButtonActionPerformed(evt);
            }
        });

        StaffMovementsButton.setText("Movimientos del personal");
        StaffMovementsButton.setPreferredSize(new java.awt.Dimension(250, 50));
        StaffMovementsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffMovementsButtonActionPerformed(evt);
            }
        });

        AbscenceVacationsButton.setText("Ausencia y Vacaciones");
        AbscenceVacationsButton.setPreferredSize(new java.awt.Dimension(250, 50));
        AbscenceVacationsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbscenceVacationsButtonActionPerformed(evt);
            }
        });

        EmployeeByDepartmentButton.setText("Empleados por departamento");
        EmployeeByDepartmentButton.setPreferredSize(new java.awt.Dimension(250, 50));
        EmployeeByDepartmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeByDepartmentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReportsPanelLayout = new javax.swing.GroupLayout(ReportsPanel);
        ReportsPanel.setLayout(ReportsPanelLayout);
        ReportsPanelLayout.setHorizontalGroup(
            ReportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportsPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(ReportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmployeeByDepartmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AbscenceVacationsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StaffMovementsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RecentHiringButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        ReportsPanelLayout.setVerticalGroup(
            ReportsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RecentHiringButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StaffMovementsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AbscenceVacationsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmployeeByDepartmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainMenuLabel.setFont(new java.awt.Font("Eras Medium ITC", 0, 24)); // NOI18N
        MainMenuLabel.setText("Menú Principal");

        ReportsLabel.setFont(new java.awt.Font("Eras Medium ITC", 0, 18)); // NOI18N
        ReportsLabel.setText("Reportes");

        ExitButton.setText("Salir");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        StaffMovementControlButton.setText("Control de movimientos del personal");
        StaffMovementControlButton.setPreferredSize(new java.awt.Dimension(250, 50));
        StaffMovementControlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StaffMovementControlButtonActionPerformed(evt);
            }
        });

        StaffActionsLabel.setFont(new java.awt.Font("Eras Medium ITC", 0, 18)); // NOI18N
        StaffActionsLabel.setText("Acciones del Personal");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(MainMenuLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitButton)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(StaffManagementButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserManagementButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StaffRecruitmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StaffControlActionButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StaffMovementControlButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StaffActionsLabel)
                        .addGap(35, 35, 35)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ReportsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ReportsLabel)
                        .addGap(159, 159, 159))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExitButton)
                    .addComponent(MainMenuLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReportsLabel)
                    .addComponent(StaffActionsLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReportsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UserManagementButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StaffManagementButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StaffRecruitmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StaffControlActionButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StaffMovementControlButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        showMenuOptions(user);
        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        var salida = JOptionPane.showConfirmDialog(this,
                "¿Desea cerrar la sesión?",
                "Confirmar",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if(salida == JOptionPane.OK_OPTION){
            this.dispose();
        } else if(salida == JOptionPane.CANCEL_OPTION){
            System.out.println("Usuario ha cancelado la operacion, se mantiene la sesión.");
        }
    }//GEN-LAST:event_formWindowClosing

    private void EmployeeByDepartmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeByDepartmentButtonActionPerformed
        EmployeeByDepartmentForm empleadoDepartamento = new EmployeeByDepartmentForm();
        empleadoDepartamento.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        empleadoDepartamento.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_EmployeeByDepartmentButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        //Solicitar confirmación para cerrar la sesión
        var salida = JOptionPane.showConfirmDialog(this,
                "¿Desea cerrar la sesión?",
                "Confirmar",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if(salida == JOptionPane.OK_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void StaffManagementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffManagementButtonActionPerformed
        PersonalManagementForm gestionPersonal = new PersonalManagementForm();
        gestionPersonal.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        gestionPersonal.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_StaffManagementButtonActionPerformed

    private void UserManagementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserManagementButtonActionPerformed
        UserManagementForm gestionUsuarios = new UserManagementForm();
        gestionUsuarios.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        gestionUsuarios.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_UserManagementButtonActionPerformed

    private void StaffRecruitmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffRecruitmentButtonActionPerformed
        HiringStaffForm contratacionPersonal = new HiringStaffForm();
        contratacionPersonal.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        contratacionPersonal.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_StaffRecruitmentButtonActionPerformed

    private void StaffControlActionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffControlActionButtonActionPerformed
        PersonalActionControlForm controlAccPersonal = new PersonalActionControlForm();
        controlAccPersonal.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        controlAccPersonal.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_StaffControlActionButtonActionPerformed

    private void StaffMovementControlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffMovementControlButtonActionPerformed
        PersonalMovementControlForm controlMovPersonal = new PersonalMovementControlForm();
        controlMovPersonal.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        controlMovPersonal.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_StaffMovementControlButtonActionPerformed

    private void RecentHiringButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecentHiringButtonActionPerformed
        RecentHiringForm contratacionReciente = new RecentHiringForm();
        contratacionReciente.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        contratacionReciente.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_RecentHiringButtonActionPerformed

    private void AbscenceVacationsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbscenceVacationsButtonActionPerformed
        AbsenceAndVacationsForm ausenciaVacaciones = new AbsenceAndVacationsForm();
        ausenciaVacaciones.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        ausenciaVacaciones.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_AbscenceVacationsButtonActionPerformed

    private void StaffMovementsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StaffMovementsButtonActionPerformed
        PersonalMovementForm movimientoPersonal = new PersonalMovementForm();
        movimientoPersonal.setVisible(true);
        this.setVisible(false);

        // Agregar un WindowListener para detectar el cierre del formulario o un dispose del mismo
        movimientoPersonal.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                setVisible(true);
            }
        });
    }//GEN-LAST:event_StaffMovementsButtonActionPerformed
    
    public void showMenuOptions(User user) {
        String str = user.getUserType();
        switch (str.toLowerCase()) {
            case "administrador":
                break;
            case "operador":
                // Botones de acciones
                UserManagementButton.setVisible(false);
                StaffManagementButton.setVisible(false);
                StaffRecruitmentButton.setVisible(false);
                StaffControlActionButton.setVisible(true);
                StaffMovementControlButton.setVisible(true);

                // Botones de reportes
                RecentHiringButton.setVisible(false);
                StaffMovementsButton.setVisible(true);
                AbscenceVacationsButton.setVisible(true);
                EmployeeByDepartmentButton.setVisible(false);

                getContentPane().revalidate();
                getContentPane().repaint();

                break;
            case "reclutador":
                UserManagementButton.setVisible(false);
                StaffManagementButton.setVisible(true);
                StaffRecruitmentButton.setVisible(true);
                StaffControlActionButton.setVisible(false);
                StaffMovementControlButton.setVisible(false);
                RecentHiringButton.setVisible(true);
                StaffMovementsButton.setVisible(false);
                AbscenceVacationsButton.setVisible(false);
                EmployeeByDepartmentButton.setVisible(true);
                break;
            default:
                JOptionPane.showMessageDialog(null, "No tiene permisos para acceder a esta aplicación", "Error",
                        JOptionPane.ERROR_MESSAGE);
                System.out.println("F: Saliendo del sistema, permiso no definido...");
                System.exit(0);
                break;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenuForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //mostrar los "Options" segun el tipo de usuario

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainMenuForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AbscenceVacationsButton;
    private javax.swing.JButton EmployeeByDepartmentButton;
    private javax.swing.JButton ExitButton;
    private javax.swing.JLabel MainMenuLabel;
    private javax.swing.JButton RecentHiringButton;
    private javax.swing.JLabel ReportsLabel;
    private javax.swing.JPanel ReportsPanel;
    private javax.swing.JLabel StaffActionsLabel;
    private javax.swing.JButton StaffControlActionButton;
    private javax.swing.JButton StaffManagementButton;
    private javax.swing.JButton StaffMovementControlButton;
    private javax.swing.JButton StaffMovementsButton;
    private javax.swing.JButton StaffRecruitmentButton;
    private javax.swing.JButton UserManagementButton;
    // End of variables declaration//GEN-END:variables
}

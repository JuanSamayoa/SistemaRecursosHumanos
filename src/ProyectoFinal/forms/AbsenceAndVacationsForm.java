/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProyectoFinal.forms;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import ProyectoFinal.PersonalActionsReport; // FIXED: Use new report class
import ProyectoFinal.Utils;

/**
 *
 * @author User
 */
public class AbsenceAndVacationsForm extends javax.swing.JFrame {

    /**
     * Creates new form AusenciaVacacionesForm
     */
    public AbsenceAndVacationsForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AbsenceVacationsReportLabel = new javax.swing.JLabel();
        ReturnButton = new javax.swing.JButton();
        ConsultRecentActionsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        AbsenceVacationsReportLabel.setFont(new java.awt.Font("Eras Medium ITC", 0, 18)); // NOI18N
        AbsenceVacationsReportLabel.setText("Reporte de Ausencia y Vacaciones");

        ReturnButton.setText("Regresar al Menú Principal");
        ReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformed(evt);
            }
        });

        ConsultRecentActionsButton.setText("Consultar acciones recientes de empleados");
        ConsultRecentActionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultRecentActionsButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(335, 335, 335)
                                .addComponent(AbsenceVacationsReportLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ConsultRecentActionsButton)))
                        .addGap(0, 377, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AbsenceVacationsReportLabel)
                .addGap(3, 3, 3)
                .addComponent(ConsultRecentActionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(ReturnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformed
        //cerrar el form actual definitivamente
        this.dispose();
    }//GEN-LAST:event_ReturnButtonActionPerformed

    private void ConsultRecentActionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultRecentActionsButtonActionPerformed
        // Ask user for date range (both dates are optional)
        String fechaInicio = JOptionPane.showInputDialog(this,
            "Ingrese la fecha de inicio para el reporte (dd/MM/yyyy) - OPCIONAL:\nDeje vacío para buscar desde el inicio de los tiempos",
            "Fecha de inicio (Opcional)",
            JOptionPane.QUESTION_MESSAGE);

        // Allow empty or null start date
        if (fechaInicio != null && !fechaInicio.trim().isEmpty() && !Utils.validateDate(fechaInicio)) {
            JOptionPane.showMessageDialog(this, "Formato de fecha de inicio inválido. Use dd/MM/yyyy", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String fechaFin = JOptionPane.showInputDialog(this,
            "Ingrese la fecha de fin para el reporte (dd/MM/yyyy) - OPCIONAL:\nDeje vacío para buscar hasta el fin de los tiempos",
            "Fecha de fin (Opcional)",
            JOptionPane.QUESTION_MESSAGE);

        // Allow empty or null end date
        if (fechaFin != null && !fechaFin.trim().isEmpty() && !Utils.validateDate(fechaFin)) {
            JOptionPane.showMessageDialog(this, "Formato de fecha de fin inválido. Use dd/MM/yyyy", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Convert empty strings to null for flexible search
        String startDate = (fechaInicio == null || fechaInicio.trim().isEmpty()) ? null : fechaInicio;
        String endDate = (fechaFin == null || fechaFin.trim().isEmpty()) ? null : fechaFin;

        // Validate date range only if both dates are provided
        if (startDate != null && endDate != null && !Utils.validateDateRange(startDate, endDate)) {
            JOptionPane.showMessageDialog(this, "La fecha de fin debe ser posterior a la fecha de inicio.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // FIXED: Use PersonalActionsReport instead of Reportes
            ArrayList<PersonalActionsReport> reportData = PersonalActionsReport.generatePersonalActionsReport(startDate, endDate);

            // Create table model
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID Acción");
            model.addColumn("ID Empleado");
            model.addColumn("Nombre");
            model.addColumn("Apellido");
            model.addColumn("Tipo de Acción");
            model.addColumn("Fecha");
            model.addColumn("Detalle");

            // Load data into table
            for (PersonalActionsReport report : reportData) {
                Object[] row = new Object[7];
                row[0] = report.getActionId();
                row[1] = report.getEmployeeId();
                row[2] = report.getFirstName();
                row[3] = report.getLastName();
                row[4] = report.getActionType();
                row[5] = report.getActionDate();
                row[6] = report.getActionDetail();
                model.addRow(row);
            }

            jTable1.setModel(model);

            if (reportData.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                    "No se encontraron acciones personales en el rango de fechas: " + fechaInicio + " - " + fechaFin,
                    "Sin resultados",
                    JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this,
                    "Reporte generado exitosamente. Se encontraron " + reportData.size() + " acciones personales.",
                    "Reporte completo",
                    JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error al generar el reporte: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ConsultRecentActionsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbsenceAndVacationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbsenceAndVacationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbsenceAndVacationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbsenceAndVacationsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbsenceAndVacationsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AbsenceVacationsReportLabel;
    private javax.swing.JButton ConsultRecentActionsButton;
    private javax.swing.JButton ReturnButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
